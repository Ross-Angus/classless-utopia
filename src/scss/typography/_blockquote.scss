blockquote {
  font-size: var(--largetext-size);
  font-style: italic;
  line-height: var(--line-height-tight);
  margin: var(--gutter) calc(var(--gutter) * 2);
  quotes: "“" "”" "‘" "’";

  & > p {
    text-indent: -1.6ch;

    * { text-indent: 0; }

    // Big, chunky opening and closing quotes
    &::before, &::after {
      display: inline-block;
      font-size: 4rem;
      line-height: 0.1;
      transform: translate(0, 0.9ch);
    }

    &::before {
      content: open-quote;
      margin: 0 0.3ch 0 0;
    }

    // Because we're using `open-quote` and `close-quote`, the rendering
    // engine keeps track of how quotes are nested inside of each other.
    // This means if we open a quote without closing it, the browser
    // will assume everything after that point will be nested. We add
    // an invisible closing quote in order to correct this behaviour.
    &::after {
      content: close-quote;
      margin: 0 0 0 0.5ch;
      opacity: 0;
    }

    // Only show the closing quote on the last paragraph
    &:last-of-type {
      &::after { opacity: 1; }
    }
  }

  @supports (hanging-punctuation: first) {
    & > p {
      hanging-punctuation: first;
      text-indent: 0;
    }
  }

  footer {
    border-top: solid var(--keyline) var(--bodytext);
    padding-top: var(--gutter);
  }

  &[cite]::after, footer {
    font-size: var(--smalltext-size);
  }

  &[cite] {
    &::after {
      border-top: dotted var(--keyline) var(--bodytext);
      content: "Source: " attr(cite);
      display: block;
      margin-top: var(--gutter);
      padding-top: var(--gutter);
    }
  }

  // Confusingly, this is the `cite` tag and attribute
  cite, &[cite]::after {
    font-style: normal;
  }
}

// A `figure` element is used in conjunction with a `blockquote` element
// to attach a citation to a `blockquote` in a way which meets the W3C
// guidelines
// https://css-tricks.com/quoting-in-html-quotations-citations-and-blockquotes/#aa-hey-what-about-the-figure-element

blockquote + figcaption {
  border-top: dotted var(--keyline) var(--bodytext);
  padding-top: var(--gutter);
  margin: var(--gutter) calc(var(--gutter) * 2) 0;
}
